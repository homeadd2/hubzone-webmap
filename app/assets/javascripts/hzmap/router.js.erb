// working with the Navigo router
HZApp.Router = (function(){
  return {
    router: {},

    startRouter: function(){
      HZApp.Router.router = new Navigo(null);

      // how to handle navigation events
      HZApp.Router.router.on({
        "*": HZApp.Router.handleRouter
      });

      HZApp.Router.router.notFound(HZApp.Router.nullHandler);

      HZApp.Router.router.resolve();
    },

    // how to handle adding state to the url
    navigateWithParams: function(params){
      console.log('navigatewithParams: ', params);
      var mapCenter = HZApp.map.getCenter();
      params += "&center=" + mapCenter.lat() + ',' + mapCenter.lng();
      var mapZoom = HZApp.map.getZoom();
      params += "&z=" + mapZoom;
      HZApp.Router.router.pause();
      HZApp.Router.router.navigate(params, true);
      HZApp.Router.router.resume();
    },

    nullHandler: function(params, query){
      console_log('nullHandler')
    },

    handleRouter: function(params, query){
      console.log('Router: ', params, query);
      if (query !== ""){
        console.log('i have parameters dont geolocate');
        var parsed_query = HZApp.Router.parseQuery(query);
        if (parsed_query.latlng){
          console.log('latlng query: ', parsed_query.latlng);
          HZApp.Router.submitMapClickSearch(parsed_query);
        } else if (parsed_query.search) {
          console.log('search query: ', parsed_query.search);
          HZApp.Router.submitMapFormSearch(parsed_query);
        } else {
          console.log('no valid search parameters detected!');
        }
      }
    },

    // submit the hubzone latlng search
    submitMapClickSearch: function(latlng){
      HZApp.GA.track( 'map', 'click', latlng );
      HZApp.MapUtils.mapSearchAjax("latlng=" + latlng);
    },

    // submit the hubzone form search
    submitMapFormSearch: function(search){
      HZApp.GA.trackSubmit('search', '#search-field-small');
      document.getElementById('search-field-small').value = search;
      HZApp.MapUtils.mapSearchAjax("search=" + search);
    },

    parseQuery: function(query){
      var parsed_query = {};
      ['latlng', 'search', 'center', 'z'].map(function(param){
        parsed_query[param] = HZApp.Router.parseQueryByName(query, param);
      });
      return parsed_query;
    },

    // return a new object for a single query parameter
    parseQueryByName: function(query, name){
      var query_split = query.split('&');
      for (var i = query_split.length - 1; i >= 0; i--) {
        var sub_split = query_split[i].split('=');
        if (sub_split[0] === name){
          return decodeURI(sub_split[1]);
        }
      }
    },
  }
})();

