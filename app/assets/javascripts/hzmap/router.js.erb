// working with the Navigo router
HZApp.Router = (function(){
  return {
    router: {},

    startRouter: function(){
      HZApp.Router.router = new Navigo(null);

      // how to handle navigation events
      HZApp.Router.router.on({
        "*": HZApp.Router.handleRouter
      });

      HZApp.Router.router.notFound(HZApp.Router.nullHandler);

      HZApp.Router.router.resolve();
    },

    // how to handle adding state to the url
    navigateWithParams: function(params){
      var mapCenter = HZApp.map.getCenter();
      params += "&center=" + mapCenter.lat() + ',' + mapCenter.lng();
      var mapZoom = HZApp.map.getZoom();
      params += "&z=" + mapZoom;
      HZApp.Router.router.pause();
      HZApp.Router.router.navigate(params, true);
      HZApp.Router.router.resume();
    },

    nullHandler: function(params, query){
      console_log('nullHandler')
    },

    handleRouter: function(params, query){
      console.log('Router: ', params, query);
      if (query !== ""){
        console.log('i have parameters dont geolocate');
        var latlng_q = HZApp.Router.parseQueryByName(query, 'latlng');
        var search_q = HZApp.Router.parseQueryByName(query, 'search');
        if (latlng_q){
          console.log('latlng query: ', latlng_q);
          HZApp.Router.submitMapClickSearch(latlng_q.latlng);
        } else if (search_q) {
          HZApp.Router.submitMapFormSearch(search_q.search);
        } else {
          console.log('no valid search parameters detected!');
        }
      }
    },

    // submit the hubzone latlng search
    submitMapClickSearch: function(latlng){
      HZApp.GA.track( 'map', 'click', latlng );
      HZApp.MapUtils.mapSearchAjax("latlng=" + latlng);
    },

    // submit the hubzone form search
    submitMapFormSearch: function(search){
      HZApp.GA.trackSubmit('search', '#search-field-small');
      document.getElementById('search-field-small').value = search;
      HZApp.MapUtils.mapSearchAjax("search=" + search);
    },

    // return a new object for a single query parameter
    // TODO: check Navigo, I think it might have built in methods for this.
    parseQueryByName: function(query, name){
      var query_split = query.split('?');
      for (var i = query_split.length - 1; i >= 0; i--) {
        var sub_split = query_split[i].split('=');
        if (sub_split[0] === name){
          var query_obj = {};
          query_obj[sub_split[0]] = decodeURI(sub_split[1]);
          return query_obj;
        }
      }
    },
  }
})();

